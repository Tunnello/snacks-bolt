import React, { useState } from 'react';
import { Plus, Heart, MessageCircle, Share2, TrendingUp, Clock, Star } from 'lucide-react';
import { Page } from '../App';

interface CommunityPageProps {
  onNavigate: (page: Page) => void;
}

export const CommunityPage: React.FC<CommunityPageProps> = ({ onNavigate }) => {
  const [activeTab, setActiveTab] = useState('hot');
  const [showCreatePost, setShowCreatePost] = useState(false);

  const posts = [
    {
      id: '1',
      title: 'ËøôÊ¨æÂÆùËóèÈõ∂È£üÔºåÊàë‰∏çÂÖÅËÆ∏ËøòÊúâ‰∫∫Ê≤°ÂêÉËøáÔºÅ',
      content: 'ÊúÄËøëÂèëÁé∞‰∫Ü‰∏ÄÊ¨æË∂ÖÁ∫ßÂ•ΩÂêÉÁöÑËøõÂè£ËñØÁâáÔºåÂè£ÊÑüÂ±ÇÊ¨°‰∏∞ÂØåÔºåÊØè‰∏ÄÂè£ÈÉΩÊòØÊÉäÂñú„ÄÇÂåÖË£Ö‰πüÂæàÁ≤æÁæéÔºåÈÄÅ‰∫∫Ëá™Áî®ÈÉΩÂæàÊ£í„ÄÇÂº∫ÁÉàÊé®ËçêÁªôÂ§ßÂÆ∂ÔºÅ',
      author: {
        name: 'Èõ∂È£üÂ∞èËææ‰∫∫',
        avatar: 'https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&dpr=1',
        level: 'ÁæéÈ£üËææ‰∫∫'
      },
      images: [
        'https://images.pexels.com/photos/1640777/pexels-photo-1640777.jpeg?auto=compress&cs=tinysrgb&w=300&h=200&dpr=1',
        'https://images.pexels.com/photos/1586942/pexels-photo-1586942.jpeg?auto=compress&cs=tinysrgb&w=300&h=200&dpr=1'
      ],
      likes: 156,
      comments: 23,
      shares: 12,
      time: '2Â∞èÊó∂Ââç',
      tags: ['ËñØÁâá', 'ËøõÂè£Èõ∂È£ü', 'Êé®Ëçê'],
      isLiked: false,
      isHot: true
    },
    {
      id: '2',
      title: 'ÊµãËØÑ10Ê¨æÁΩëÁ∫¢Èõ∂È£üÔºåÂì™Ê¨æÊâçÊòØÁúüÁöÑÂ•ΩÂêÉÔºü',
      content: 'Ëä±‰∫Ü‰∏ÄÂë®Êó∂Èó¥ÔºåËØïÂêÉ‰∫ÜÂΩì‰∏ãÊúÄÁÅ´ÁöÑ10Ê¨æÁΩëÁ∫¢Èõ∂È£üÔºå‰ªéÂè£ÊÑü„ÄÅÂåÖË£Ö„ÄÅÊÄß‰ª∑ÊØî‰∏â‰∏™Áª¥Â∫¶ËøõË°å‰∫ÜËØ¶ÁªÜÊµãËØÑ„ÄÇÁªìÊûúÂèØËÉΩ‰ºöÈ¢†Ë¶Ü‰Ω†ÁöÑËÆ§Áü•ÔºÅ',
      author: {
        name: 'ÁæéÈ£üÊµãËØÑÂ∏à',
        avatar: 'https://images.pexels.com/photos/1239291/pexels-photo-1239291.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&dpr=1',
        level: '‰∏ì‰∏öÊµãËØÑ'
      },
      images: [
        'https://images.pexels.com/photos/3872433/pexels-photo-3872433.jpeg?auto=compress&cs=tinysrgb&w=300&h=200&dpr=1'
      ],
      likes: 234,
      comments: 45,
      shares: 28,
      time: '5Â∞èÊó∂Ââç',
      tags: ['ÊµãËØÑ', 'ÁΩëÁ∫¢Èõ∂È£ü', 'ÊéíË°åÊ¶ú'],
      isLiked: true,
      isHot: true
    },
    {
      id: '3',
      title: 'ÂÅ•Â∫∑Èõ∂È£üÂ§ßÁõòÁÇπÔºåÂ•ΩÂêÉ‰∏çËÉñÁöÑÁßòÂØÜÔºÅ',
      content: '‰Ωú‰∏∫‰∏Ä‰∏™ËµÑÊ∑±Èõ∂È£üÁà±Â•ΩËÄÖÂÖºËê•ÂÖªÂ∏àÔºå‰ªäÂ§©ÂàÜ‰∫´‰∏Ä‰∫õÊó¢Êª°Ë∂≥Âè£ËÖπ‰πãÊ¨≤Âèà‰∏ç‰ºöÂ∏¶Êù•Ë¥üÊãÖÁöÑÂÅ•Â∫∑Èõ∂È£üÈÄâÊã©„ÄÇÊØè‰∏ÄÊ¨æÈÉΩÊòØÁ≤æÂøÉÊåëÈÄâÔºåËê•ÂÖªÊàêÂàÜÂàÜÊûêËØ¶ÁªÜ„ÄÇ',
      author: {
        name: 'Ëê•ÂÖªÂ∏àÂ∞èÂßêÂßê',
        avatar: 'https://images.pexels.com/photos/774909/pexels-photo-774909.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&dpr=1',
        level: 'ÂÅ•Â∫∑‰∏ìÂÆ∂'
      },
      images: [
        'https://images.pexels.com/photos/1295572/pexels-photo-1295572.jpeg?auto=compress&cs=tinysrgb&w=300&h=200&dpr=1',
        'https://images.pexels.com/photos/1435735/pexels-photo-1435735.jpeg?auto=compress&cs=tinysrgb&w=300&h=200&dpr=1'
      ],
      likes: 89,
      comments: 12,
      shares: 6,
      time: '1Â§©Ââç',
      tags: ['ÂÅ•Â∫∑Èõ∂È£ü', 'Ëê•ÂÖª', 'ÂáèËÑÇ'],
      isLiked: false,
      isHot: false
    },
    {
      id: '4',
      title: 'Á´•Âπ¥ÂõûÂøÜÊùÄÔºÅÈÇ£‰∫õÂπ¥Êàë‰ª¨‰∏ÄËµ∑ÂêÉËøáÁöÑÈõ∂È£ü',
      content: '90ÂêéÁöÑÁ´•Âπ¥Èõ∂È£üÂõûÂøÜÔºå‰ªé5ÊØõÈí±ÁöÑËæ£Êù°Âà∞1ÂùóÈí±ÁöÑÂπ≤ËÑÜÈù¢ÔºåÊØè‰∏ÄÊ†∑ÈÉΩÊâøËΩΩÁùÄÊª°Êª°ÁöÑÂõûÂøÜ„ÄÇÂì™‰∏ÄÊ¨æÊòØ‰Ω†ÁöÑÊúÄÁà±Ôºü',
      author: {
        name: 'ÊÄÄÊóßÊéß',
        avatar: 'https://images.pexels.com/photos/1043471/pexels-photo-1043471.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&dpr=1',
        level: 'ÂõûÂøÜÊî∂ËóèÂÆ∂'
      },
      images: [
        'https://images.pexels.com/photos/3434523/pexels-photo-3434523.jpeg?auto=compress&cs=tinysrgb&w=300&h=200&dpr=1'
      ],
      likes: 178,
      comments: 67,
      shares: 15,
      time: '2Â§©Ââç',
      tags: ['Á´•Âπ¥ÂõûÂøÜ', 'ÊÄÄÊóß', 'ÁªèÂÖ∏Èõ∂È£ü'],
      isLiked: false,
      isHot: false
    }
  ];

  const trendingTopics = [
    { name: '#Êñ∞ÂìÅÈõ∂È£ü', count: '12.3‰∏áËÆ®ËÆ∫' },
    { name: '#ÂÅ•Â∫∑Èõ∂È£ü', count: '8.7‰∏áËÆ®ËÆ∫' },
    { name: '#ËøõÂè£Èõ∂È£ü', count: '6.2‰∏áËÆ®ËÆ∫' },
    { name: '#Á´•Âπ¥ÂõûÂøÜ', count: '5.8‰∏áËÆ®ËÆ∫' },
    { name: '#Èõ∂È£üÊµãËØÑ', count: '4.9‰∏áËÆ®ËÆ∫' }
  ];

  const handleLike = (postId: string) => {
    // ÂÆûÈôÖÂ∫îÁî®‰∏≠ËøôÈáå‰ºöË∞ÉÁî®API
    console.log('ÁÇπËµûÂ∏ñÂ≠ê:', postId);
  };

  const handleCreatePost = () => {
    setShowCreatePost(true);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="flex flex-col lg:flex-row gap-8">
          {/* Main Content */}
          <div className="flex-1">
            {/* Header */}
            <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
              <div className="flex items-center justify-between mb-4">
                <h1 className="text-2xl font-bold text-gray-800">Èõ∂È£üÁ§æÂå∫</h1>
                <button
                  onClick={handleCreatePost}
                  className="bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600 transition-colors flex items-center"
                >
                  <Plus className="w-4 h-4 mr-2" />
                  ÂèëÂ∏ÉÂ∏ñÂ≠ê
                </button>
              </div>
              
              <div className="flex space-x-6 border-b">
                {[
                  { id: 'hot', label: 'ÁÉ≠Èó®', icon: TrendingUp },
                  { id: 'latest', label: 'ÊúÄÊñ∞', icon: Clock },
                  { id: 'reviews', label: 'ÊµãËØÑ', icon: Star }
                ].map((tab) => {
                  const Icon = tab.icon;
                  return (
                    <button
                      key={tab.id}
                      onClick={() => setActiveTab(tab.id)}
                      className={`flex items-center space-x-2 pb-3 border-b-2 transition-colors ${
                        activeTab === tab.id
                          ? 'border-orange-500 text-orange-600'
                          : 'border-transparent text-gray-600 hover:text-gray-800'
                      }`}
                    >
                      <Icon className="w-4 h-4" />
                      <span className="font-medium">{tab.label}</span>
                    </button>
                  );
                })}
              </div>
            </div>

            {/* Posts */}
            <div className="space-y-6">
              {posts.map((post) => (
                <div key={post.id} className="bg-white rounded-lg shadow-sm overflow-hidden">
                  <div className="p-6">
                    {/* Author Info */}
                    <div className="flex items-center mb-4">
                      <img
                        src={post.author.avatar}
                        alt={post.author.name}
                        className="w-10 h-10 rounded-full mr-3"
                      />
                      <div>
                        <div className="flex items-center space-x-2">
                          <span className="font-medium text-gray-800">{post.author.name}</span>
                          <span className="text-xs bg-orange-100 text-orange-600 px-2 py-1 rounded-full">
                            {post.author.level}
                          </span>
                        </div>
                        <div className="flex items-center space-x-2 text-sm text-gray-500">
                          <span>{post.time}</span>
                          {post.isHot && (
                            <span className="text-red-500 font-medium">üî• ÁÉ≠Èó®</span>
                          )}
                        </div>
                      </div>
                    </div>

                    {/* Content */}
                    <div className="mb-4">
                      <h2 className="text-lg font-semibold text-gray-800 mb-2">{post.title}</h2>
                      <p className="text-gray-600 leading-relaxed">{post.content}</p>
                    </div>

                    {/* Tags */}
                    <div className="flex flex-wrap gap-2 mb-4">
                      {post.tags.map((tag) => (
                        <span
                          key={tag}
                          className="text-sm bg-gray-100 text-gray-600 px-3 py-1 rounded-full hover:bg-orange-100 hover:text-orange-600 cursor-pointer transition-colors"
                        >
                          #{tag}
                        </span>
                      ))}
                    </div>

                    {/* Images */}
                    {post.images.length > 0 && (
                      <div className="mb-4">
                        <div className={`grid gap-2 ${
                          post.images.length === 1 ? 'grid-cols-1' : 
                          post.images.length === 2 ? 'grid-cols-2' : 
                          'grid-cols-3'
                        }`}>
                          {post.images.map((image, index) => (
                            <img
                              key={index}
                              src={image}
                              alt=""
                              className="w-full h-40 object-cover rounded-lg hover:opacity-90 cursor-pointer transition-opacity"
                            />
                          ))}
                        </div>
                      </div>
                    )}

                    {/* Actions */}
                    <div className="flex items-center justify-between pt-4 border-t border-gray-100">
                      <div className="flex items-center space-x-6">
                        <button
                          onClick={() => handleLike(post.id)}
                          className={`flex items-center space-x-2 px-3 py-2 rounded-lg transition-colors ${
                            post.isLiked
                              ? 'bg-red-50 text-red-600'
                              : 'text-gray-600 hover:bg-gray-50'
                          }`}
                        >
                          <Heart className={`w-4 h-4 ${post.isLiked ? 'fill-current' : ''}`} />
                          <span>{post.likes}</span>
                        </button>
                        <button className="flex items-center space-x-2 text-gray-600 hover:bg-gray-50 px-3 py-2 rounded-lg transition-colors">
                          <MessageCircle className="w-4 h-4" />
                          <span>{post.comments}</span>
                        </button>
                        <button className="flex items-center space-x-2 text-gray-600 hover:bg-gray-50 px-3 py-2 rounded-lg transition-colors">
                          <Share2 className="w-4 h-4" />
                          <span>{post.shares}</span>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Sidebar */}
          <div className="w-full lg:w-80 space-y-6">
            {/* Trending Topics */}
            <div className="bg-white rounded-lg shadow-sm p-6">
              <h3 className="font-semibold text-gray-800 mb-4 flex items-center">
                <TrendingUp className="w-5 h-5 mr-2 text-orange-500" />
                ÁÉ≠Èó®ËØùÈ¢ò
              </h3>
              <div className="space-y-3">
                {trendingTopics.map((topic, index) => (
                  <div
                    key={topic.name}
                    className="flex items-center justify-between p-3 hover:bg-gray-50 rounded-lg cursor-pointer transition-colors"
                  >
                    <div>
                      <div className="flex items-center">
                        <span className="text-orange-500 font-medium mr-2">#{index + 1}</span>
                        <span className="text-gray-800 font-medium">{topic.name}</span>
                      </div>
                      <span className="text-sm text-gray-500">{topic.count}</span>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Community Rules */}
            <div className="bg-white rounded-lg shadow-sm p-6">
              <h3 className="font-semibold text-gray-800 mb-4">Á§æÂå∫ËßÑÂàô</h3>
              <div className="space-y-3 text-sm text-gray-600">
                <div className="flex items-start">
                  <span className="text-orange-500 mr-2">1.</span>
                  <span>ÂèëÂ∏ÉÁúüÂÆûÁöÑÈõ∂È£ü‰ΩìÈ™åÂíåËØÑ‰ª∑</span>
                </div>
                <div className="flex items-start">
                  <span className="text-orange-500 mr-2">2.</span>
                  <span>Â∞äÈáç‰ªñ‰∫∫ÔºåÂèãÂñÑ‰∫íÂä®</span>
                </div>
                <div className="flex items-start">
                  <span className="text-orange-500 mr-2">3.</span>
                  <span>Á¶ÅÊ≠¢ÂèëÂ∏ÉÂπøÂëäÂíåÂûÉÂúæ‰ø°ÊÅØ</span>
                </div>
                <div className="flex items-start">
                  <span className="text-orange-500 mr-2">4.</span>
                  <span>‰øùÊä§‰∏™‰∫∫ÈöêÁßÅ‰ø°ÊÅØ</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Create Post Modal */}
        {showCreatePost && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-auto">
              <div className="p-6 border-b border-gray-200">
                <div className="flex items-center justify-between">
                  <h2 className="text-xl font-semibold text-gray-800">ÂèëÂ∏ÉÊñ∞Â∏ñÂ≠ê</h2>
                  <button
                    onClick={() => setShowCreatePost(false)}
                    className="text-gray-400 hover:text-gray-600"
                  >
                    ‚úï
                  </button>
                </div>
              </div>
              <div className="p-6">
                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Â∏ñÂ≠êÊ†áÈ¢ò
                    </label>
                    <input
                      type="text"
                      placeholder="ËæìÂÖ•Â∏ñÂ≠êÊ†áÈ¢ò..."
                      className="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Â∏ñÂ≠êÂÜÖÂÆπ
                    </label>
                    <textarea
                      rows={8}
                      placeholder="ÂàÜ‰∫´‰Ω†ÁöÑÈõ∂È£ü‰ΩìÈ™å..."
                      className="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Ê∑ªÂä†ÂõæÁâá
                    </label>
                    <div className="border-2 border-dashed border-gray-300 rounded-md p-6 text-center">
                      <p className="text-gray-500">ÁÇπÂáªÊàñÊãñÊãΩÂõæÁâáÂà∞ËøôÈáå</p>
                    </div>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Ê†áÁ≠æ
                    </label>
                    <input
                      type="text"
                      placeholder="Ê∑ªÂä†Ê†áÁ≠æÔºåÁî®Á©∫Ê†ºÂàÜÈöî..."
                      className="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500"
                    />
                  </div>
                </div>
                <div className="flex justify-end space-x-3 mt-6">
                  <button
                    onClick={() => setShowCreatePost(false)}
                    className="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors"
                  >
                    ÂèñÊ∂à
                  </button>
                  <button
                    onClick={() => setShowCreatePost(false)}
                    className="px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 transition-colors"
                  >
                    ÂèëÂ∏É
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};